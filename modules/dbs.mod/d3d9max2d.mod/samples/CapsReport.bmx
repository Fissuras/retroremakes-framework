SuperStrict
Framework maxgui.maxgui
Import BRL.EventQueue
Import MaxGUI.Win32MaxGUIEx
Import dbs.d3d9max2d

'Import "Dx9Max2dDriver\d3d9caps.bmx"
'Import "Dx9Max2dDriver\d3d9.bmx"
Import Brl.Retro

AppTitle="Direct 9 Driver Information"
Const WINDOW_CENTER:Int=0
	

Global MAINWINDOW:TGadget=CreateWindow(AppTitle,0,0,800,600,Null,WINDOW_TITLEBAR|WINDOW_RESIZABLE|WINDOW_MENU|WINDOW_STATUS|WINDOW_HIDDEN|WINDOW_CENTER)

'Global MAINPANEL:TGadget=CreatePanel(0,0,MAINWINDOW.clientwidth(),MAINWINDOW.clientheight(),MAINWINDOW)
'MAINPANEL.setlayout 1,1,1,1
Global MAINPANEL:TGadget=MAINWINDOW;
Global TEXTEDITOR:TGadget=CreateTextArea(0,0,MAINPANEL.ClientWidth(),MAINPANEL.ClientHeight(),MAINPANEL)
TEXTEDITOR.setlayout 1,1,1,1
TEXTEDITOR.SetColor 240,240,240
Global  font:TGUIFont=LoadGuiFont("Courier New",10)
If font SetGadgetFont TEXTEDITOR,font
'=================================================================
'Menu
'=================================================================
Global root:TGadget=WindowMenu(MAINWINDOW)

Const MENU_EXIT:Int=1
Const MENU_RUN :Int=2

Global menu:TGadget=CreateMenu("File",0,root)
CreateMenu("Get Information",MENU_RUN ,menu)
CreateMenu("",0,menu)
CreateMenu("Exit",MENU_EXIT,menu)
MAINWINDOW.updatemenu()

'UpdateStatusbar()
ShowGadget MAINWINDOW
ActivateGadget TEXTEDITOR

'=================================================================
'Main Loop
'=================================================================
Repeat
	WaitEvent()
	Select EventID()	
		Case EVENT_WINDOWCLOSE
			End	
		Case EVENT_MENUACTION
			Select EventData()
				Case MENU_EXIT					
					End
				Case MENU_RUN
					GetDriverCaps()						
			EndSelect
	EndSelect
	UpdateStatusbar()
Forever



Function Print(Text:String)
	Text:+"~n"
	AddTextAreaText(TEXTEDITOR,Text)  
End Function

Function YesNo:String(Value:Int)
	If Value Return " Yes"
	Return " No"
End Function

Function FormatText(Label:String,Value:String="")
	Print LSet$("~t"+Label,50)+Value
End Function

Function FormatMask(value:Int, Labels:String[],Mask:Int[])
	For Local i:Int =0 Until Mask.Length
		Local yn:String=YesNo(value&Mask[i])
		If yn=" Yes" FormatText("~t"+Labels[i],yn)
	Next
End Function

Function GetDriverCaps()
	SetTextAreaText(TEXTEDITOR,"")
	If Not Direct3DCreate9
		Print "Direct3d9 is not installed!"
		Return
	End If
	Local d3d9: IDirect3D9=Direct3DCreate9( $900 )
	If Not d3d9 
		Print "Unable to Create IDirect3D9 interface"
		Return
	End If 	
	Local adpInfo : D3DADAPTER_IDENTIFIER9 = New D3DADAPTER_IDENTIFIER9
	If d3d9.GetAdapterIdentifier(0,$00000002,adpInfo)
		Print "Unable to Get AdapterInfo"	
		d3d9.Release_
		Return
	End If 
	Print "Adapater Info"
	Print "----------------------------------------------------------------"
	FormatText "Driver",adpInfo.Driver()
	FormatText "Description",adpInfo.Description()
	FormatText "DeviceName",adpInfo.DeviceName()
	FormatText "DriverVersion","0x"+Hex(adpInfo.DriverVersionHighPart)+"-"+Hex(adpInfo.DriverVersionLowPart)
	FormatText "VendorId","0x"+Hex(adpInfo.VendorId)
	FormatText "DeviceId","0x"+Hex(adpInfo.DeviceId)
	FormatText "SubSysId","0x"+Hex(adpInfo.SubSysId)
	FormatText "Revision",adpInfo.Revision 
	FormatText "WHQLLevel",adpInfo.WHQLLevel
	
	
	Local caps : D3DCAPS9= New D3DCAPS9
	If d3d9.GetDeviceCaps(0,D3DDEVTYPE.D3DDEVTYPE_HAL,caps)
		Print "Unable to read device caps"
		d3d9.Release_
		Return
	End If
	Print ""
	Print "Device Caps"
	Print "----------------------------------------------------------------"
	
	FormatText "DeviceType",caps.DeviceType
    FormatText "AdapterOrdinal",caps.AdapterOrdinal
'    '/* Caps from DX7 Draw */
	
	Print "~tCaps"
	Local CapsMask:Int[]=[D3DCAPS_READ_SCANLINE]
	Local CapsText:String[]=["D3DCAPS_READ_SCANLINE"]	
	FormatMask(caps.caps,CapsText,CapsMask)
	
	Print "~tCaps2"
	Local Caps2Mask:Int[]=[D3DCAPS2_FULLSCREENGAMMA,D3DCAPS2_CANCALIBRATEGAMMA,D3DCAPS2_RESERVED,D3DCAPS2_CANMANAGERESOURCE,D3DCAPS2_DYNAMICTEXTURES,D3DCAPS2_CANAUTOGENMIPMAP]
	Local Caps2Text:String[]=["D3DCAPS2_FULLSCREENGAMMA","D3DCAPS2_CANCALIBRATEGAMMA","D3DCAPS2_RESERVED","D3DCAPS2_CANMANAGERESOURCE","D3DCAPS2_DYNAMICTEXTURES","D3DCAPS2_CANAUTOGENMIPMAP"]
	FormatMask(caps.caps2,Caps2Text,Caps2Mask)
	
	Print "~tCaps3"
	Local Caps3Mask:Int[]=[D3DCAPS3_RESERVED,D3DCAPS3_ALPHA_FULLSCREEN_FLIP_OR_DISCARD,D3DCAPS3_LINEAR_TO_SRGB_PRESENTATION,D3DCAPS3_COPY_TO_VIDMEM,D3DCAPS3_COPY_TO_SYSTEMMEM]
	Local Caps3Text:String[]=["D3DCAPS3_RESERVED","D3DCAPS3_ALPHA_FULLSCREEN_FLIP_OR_DISCARD","D3DCAPS3_LINEAR_TO_SRGB_PRESENTATION","D3DCAPS3_COPY_TO_VIDMEM","D3DCAPS3_COPY_TO_SYSTEMMEM"]
	FormatMask(caps.caps3,Caps3Text,Caps3Mask)

	Print "~tPresentationIntervals"
	Local PresentMask:Int[]=[D3DPRESENT_INTERVAL_DEFAULT,D3DPRESENT_INTERVAL_ONE,D3DPRESENT_INTERVAL_TWO,D3DPRESENT_INTERVAL_THREE,D3DPRESENT_INTERVAL_FOUR,D3DPRESENT_INTERVAL_IMMEDIATE]
	Local PresentText:String[]=["D3DPRESENT_INTERVAL_DEFAULT","D3DPRESENT_INTERVAL_ONE","D3DPRESENT_INTERVAL_TWO","D3DPRESENT_INTERVAL_THREE","D3DPRESENT_INTERVAL_FOUR","D3DPRESENT_INTERVAL_IMMEDIATE"]
	FormatMask(caps.PresentationIntervals,PresentText,PresentMask)

	Print "~tCursorCaps"
	Local CursorCapsMask:Int[]=[D3DCURSORCAPS_COLOR,D3DCURSORCAPS_LOWRES]
	Local CursorCapsText:String[]=["D3DCURSORCAPS_COLOR","D3DCURSORCAPS_LOWRES"]	
	FormatMask(caps.CursorCaps,CursorCapsText,CursorCapsMask)
	
	Print "~tDevCaps"
	Local DevCapsMask :Int[]=[D3DDEVCAPS_EXECUTESYSTEMMEMORY,D3DDEVCAPS_EXECUTEVIDEOMEMORY,D3DDEVCAPS_TLVERTEXSYSTEMMEMORY,..
							D3DDEVCAPS_TLVERTEXVIDEOMEMORY,D3DDEVCAPS_TEXTURESYSTEMMEMORY,D3DDEVCAPS_TEXTUREVIDEOMEMORY,..
							D3DDEVCAPS_DRAWPRIMTLVERTEX,D3DDEVCAPS_CANRENDERAFTERFLIP,D3DDEVCAPS_TEXTURENONLOCALVIDMEM,..
							D3DDEVCAPS_DRAWPRIMITIVES2,D3DDEVCAPS_SEPARATETEXTUREMEMORIES,D3DDEVCAPS_DRAWPRIMITIVES2EX,..
							D3DDEVCAPS_HWTRANSFORMANDLIGHT,D3DDEVCAPS_CANBLTSYSTONONLOCAL,D3DDEVCAPS_HWRASTERIZATION,..
							D3DDEVCAPS_PUREDEVICE,D3DDEVCAPS_QUINTICRTPATCHES,D3DDEVCAPS_RTPATCHES,..
							D3DDEVCAPS_RTPATCHHANDLEZERO,D3DDEVCAPS_NPATCHES]

	Local DevCapsText :String[]=["D3DDEVCAPS_EXECUTESYSTEMMEMORY","D3DDEVCAPS_EXECUTEVIDEOMEMORY","D3DDEVCAPS_TLVERTEXSYSTEMMEMORY",..
							"D3DDEVCAPS_TLVERTEXVIDEOMEMORY","D3DDEVCAPS_TEXTURESYSTEMMEMORY","D3DDEVCAPS_TEXTUREVIDEOMEMORY",..
							"D3DDEVCAPS_DRAWPRIMTLVERTEX","D3DDEVCAPS_CANRENDERAFTERFLIP","D3DDEVCAPS_TEXTURENONLOCALVIDMEM",..
							"D3DDEVCAPS_DRAWPRIMITIVES2","D3DDEVCAPS_SEPARATETEXTUREMEMORIES","D3DDEVCAPS_DRAWPRIMITIVES2EX",..
							"D3DDEVCAPS_HWTRANSFORMANDLIGHT","D3DDEVCAPS_CANBLTSYSTONONLOCAL","D3DDEVCAPS_HWRASTERIZATION",..
							"D3DDEVCAPS_PUREDEVICE","D3DDEVCAPS_QUINTICRTPATCHES","D3DDEVCAPS_RTPATCHES",..
							"D3DDEVCAPS_RTPATCHHANDLEZERO","D3DDEVCAPS_NPATCHES"]
	FormatMask(caps.DevCaps,DevCapsText ,DevCapsMask )

	Print "~tPrimitiveMiscCaps"	
	Local PrimMask:Int[]=[D3DPMISCCAPS_MASKZ, D3DPMISCCAPS_CULLNONE, D3DPMISCCAPS_CULLCW, D3DPMISCCAPS_CULLCCW, D3DPMISCCAPS_COLORWRITEENABLE, D3DPMISCCAPS_CLIPPLANESCALEDPOINTS, D3DPMISCCAPS_CLIPTLVERTS, D3DPMISCCAPS_TSSARGTEMP, D3DPMISCCAPS_BLENDOP, D3DPMISCCAPS_NULLREFERENCE,..
						 D3DPMISCCAPS_INDEPENDENTWRITEMASKS, D3DPMISCCAPS_PERSTAGECONSTANT, D3DPMISCCAPS_FOGANDSPECULARALPHA, D3DPMISCCAPS_SEPARATEALPHABLEND,..
						 D3DPMISCCAPS_MRTINDEPENDENTBITDEPTHS, D3DPMISCCAPS_MRTPOSTPIXELSHADERBLENDING, D3DPMISCCAPS_FOGVERTEXCLAMPED]
	Local PrimText:String[]=["D3DPMISCCAPS_MASKZ", "D3DPMISCCAPS_CULLNONE", "D3DPMISCCAPS_CULLCW", "D3DPMISCCAPS_CULLCCW", "D3DPMISCCAPS_COLORWRITEENABLE", "D3DPMISCCAPS_CLIPPLANESCALEDPOINTS", "D3DPMISCCAPS_CLIPTLVERTS", "D3DPMISCCAPS_TSSARGTEMP", "D3DPMISCCAPS_BLENDOP",..
						 "D3DPMISCCAPS_NULLREFERENCE", "D3DPMISCCAPS_INDEPENDENTWRITEMASKS", "D3DPMISCCAPS_PERSTAGECONSTANT", "D3DPMISCCAPS_FOGANDSPECULARALPHA",..
						 "D3DPMISCCAPS_SEPARATEALPHABLEND", "D3DPMISCCAPS_MRTINDEPENDENTBITDEPTHS", "D3DPMISCCAPS_MRTPOSTPIXELSHADERBLENDING", "D3DPMISCCAPS_FOGVERTEXCLAMPED"]
	FormatMask(caps.PrimitiveMiscCaps,PrimText,PrimMask)

	
	Print "~tRasterCaps"
	Local RasterMask:Int[]=[D3DPRASTERCAPS_DITHER, D3DPRASTERCAPS_ZTEST, D3DPRASTERCAPS_FOGVERTEX, D3DPRASTERCAPS_FOGTABLE, D3DPRASTERCAPS_MIPMAPLODBIAS, D3DPRASTERCAPS_ZBUFFERLESSHSR, D3DPRASTERCAPS_FOGRANGE, D3DPRASTERCAPS_ANISOTROPY, D3DPRASTERCAPS_WBUFFER, D3DPRASTERCAPS_WFOG, D3DPRASTERCAPS_ZFOG, D3DPRASTERCAPS_COLORPERSPECTIVE, D3DPRASTERCAPS_SCISSORTEST, D3DPRASTERCAPS_SLOPESCALEDEPTHBIAS, D3DPRASTERCAPS_DEPTHBIAS, D3DPRASTERCAPS_MULTISAMPLE_TOGGLE]
	Local RasterText:String[]=["D3DPRASTERCAPS_DITHER", "D3DPRASTERCAPS_ZTEST", "D3DPRASTERCAPS_FOGVERTEX", "D3DPRASTERCAPS_FOGTABLE", "D3DPRASTERCAPS_MIPMAPLODBIAS", "D3DPRASTERCAPS_ZBUFFERLESSHSR", "D3DPRASTERCAPS_FOGRANGE", "D3DPRASTERCAPS_ANISOTROPY", "D3DPRASTERCAPS_WBUFFER", "D3DPRASTERCAPS_WFOG", "D3DPRASTERCAPS_ZFOG", "D3DPRASTERCAPS_COLORPERSPECTIVE", "D3DPRASTERCAPS_SCISSORTEST", "D3DPRASTERCAPS_SLOPESCALEDEPTHBIAS", "D3DPRASTERCAPS_DEPTHBIAS", "D3DPRASTERCAPS_MULTISAMPLE_TOGGLE"]
	FormatMask(caps.RasterCaps,RasterText,RasterMask)
	
	Print "~tZCmpCaps"
	Local zaMask:Int[]=[D3DPCMPCAPS_NEVER, D3DPCMPCAPS_LESS, D3DPCMPCAPS_EQUAL, D3DPCMPCAPS_LESSEQUAL, D3DPCMPCAPS_GREATER, D3DPCMPCAPS_NOTEQUAL, D3DPCMPCAPS_GREATEREQUAL, D3DPCMPCAPS_ALWAYS]
	Local zaText:String[]=["D3DPCMPCAPS_NEVER", "D3DPCMPCAPS_LESS", "D3DPCMPCAPS_EQUAL", "D3DPCMPCAPS_LESSEQUAL", "D3DPCMPCAPS_GREATER", "D3DPCMPCAPS_NOTEQUAL", "D3DPCMPCAPS_GREATEREQUAL", "D3DPCMPCAPS_ALWAYS"]
	FormatMask(caps.ZCmpCaps,zaText,zaMask)	

	Print "~tSrcBlendCaps"
	
	Local sdMask:Int[]=[D3DPBLENDCAPS_ZERO, D3DPBLENDCAPS_ONE, D3DPBLENDCAPS_SRCCOLOR, D3DPBLENDCAPS_INVSRCCOLOR, D3DPBLENDCAPS_SRCALPHA, D3DPBLENDCAPS_INVSRCALPHA, D3DPBLENDCAPS_DESTALPHA, D3DPBLENDCAPS_INVDESTALPHA, D3DPBLENDCAPS_DESTCOLOR, D3DPBLENDCAPS_INVDESTCOLOR, D3DPBLENDCAPS_SRCALPHASAT, D3DPBLENDCAPS_BOTHSRCALPHA, D3DPBLENDCAPS_BOTHINVSRCALPHA, D3DPBLENDCAPS_BLENDFACTOR]
	Local sdText:String[]=["D3DPBLENDCAPS_ZERO", "D3DPBLENDCAPS_ONE", "D3DPBLENDCAPS_SRCCOLOR", "D3DPBLENDCAPS_INVSRCCOLOR", "D3DPBLENDCAPS_SRCALPHA", "D3DPBLENDCAPS_INVSRCALPHA", "D3DPBLENDCAPS_DESTALPHA", "D3DPBLENDCAPS_INVDESTALPHA", "D3DPBLENDCAPS_DESTCOLOR", "D3DPBLENDCAPS_INVDESTCOLOR", "D3DPBLENDCAPS_SRCALPHASAT", "D3DPBLENDCAPS_BOTHSRCALPHA", "D3DPBLENDCAPS_BOTHINVSRCALPHA", "D3DPBLENDCAPS_BLENDFACTOR"]
	FormatMask(caps.SrcBlendCaps,sdText,sdMask)
	Print "~tDestBlendCaps"
	FormatMask(caps.DestBlendCaps,sdText,sdMask)
	
	Print "~tAlphaCmpCaps"
	FormatMask(caps.AlphaCmpCaps,zaText,zaMask)
	
	
	
	Print "~tShadeCaps"
	Local shademask:Int[]=[D3DPSHADECAPS_COLORGOURAUDRGB, D3DPSHADECAPS_SPECULARGOURAUDRGB, D3DPSHADECAPS_ALPHAGOURAUDBLEND, D3DPSHADECAPS_FOGGOURAUD]
	Local shadetext:String[]=["D3DPSHADECAPS_COLORGOURAUDRGB", "D3DPSHADECAPS_SPECULARGOURAUDRGB", "D3DPSHADECAPS_ALPHAGOURAUDBLEND", "D3DPSHADECAPS_FOGGOURAUD"]
	FormatMask(caps.ShadeCaps,shadetext,shademask)
	
	Print "~tTextureCaps"
	Local texturemask:Int[]=[D3DPTEXTURECAPS_PERSPECTIVE, D3DPTEXTURECAPS_POW2, D3DPTEXTURECAPS_ALPHA, D3DPTEXTURECAPS_SQUAREONLY, D3DPTEXTURECAPS_TEXREPEATNOTSCALEDBYSIZE, D3DPTEXTURECAPS_ALPHAPALETTE, D3DPTEXTURECAPS_NONPOW2CONDITIONAL, D3DPTEXTURECAPS_PROJECTED, D3DPTEXTURECAPS_CUBEMAP, D3DPTEXTURECAPS_VOLUMEMAP, D3DPTEXTURECAPS_MIPMAP, D3DPTEXTURECAPS_MIPVOLUMEMAP, D3DPTEXTURECAPS_MIPCUBEMAP, D3DPTEXTURECAPS_CUBEMAP_POW2, D3DPTEXTURECAPS_VOLUMEMAP_POW2, D3DPTEXTURECAPS_NOPROJECTEDBUMPENV]
	Local texturetext:String[]=["D3DPTEXTURECAPS_PERSPECTIVE", "D3DPTEXTURECAPS_POW2", "D3DPTEXTURECAPS_ALPHA", "D3DPTEXTURECAPS_SQUAREONLY", "D3DPTEXTURECAPS_TEXREPEATNOTSCALEDBYSIZE", "D3DPTEXTURECAPS_ALPHAPALETTE", "D3DPTEXTURECAPS_NONPOW2CONDITIONAL", "D3DPTEXTURECAPS_PROJECTED", "D3DPTEXTURECAPS_CUBEMAP", "D3DPTEXTURECAPS_VOLUMEMAP", "D3DPTEXTURECAPS_MIPMAP", "D3DPTEXTURECAPS_MIPVOLUMEMAP", "D3DPTEXTURECAPS_MIPCUBEMAP", "D3DPTEXTURECAPS_CUBEMAP_POW2", "D3DPTEXTURECAPS_VOLUMEMAP_POW2", "D3DPTEXTURECAPS_NOPROJECTEDBUMPENV"]
	FormatMask(caps.TextureCaps,texturetext,texturemask)
	
	Print "~tTextureFilterCaps"
	
	Local filterMask:Int[]=[D3DPTFILTERCAPS_MINFPOINT, D3DPTFILTERCAPS_MINFLINEAR, D3DPTFILTERCAPS_MINFANISOTROPIC, D3DPTFILTERCAPS_MINFPYRAMIDALQUAD, D3DPTFILTERCAPS_MINFGAUSSIANQUAD, D3DPTFILTERCAPS_MIPFPOINT, D3DPTFILTERCAPS_MIPFLINEAR, D3DPTFILTERCAPS_MAGFPOINT, D3DPTFILTERCAPS_MAGFLINEAR, D3DPTFILTERCAPS_MAGFANISOTROPIC, D3DPTFILTERCAPS_MAGFPYRAMIDALQUAD, D3DPTFILTERCAPS_MAGFGAUSSIANQUAD]
	Local filterText:String[]=["D3DPTFILTERCAPS_MINFPOINT", "D3DPTFILTERCAPS_MINFLINEAR", "D3DPTFILTERCAPS_MINFANISOTROPIC", "D3DPTFILTERCAPS_MINFPYRAMIDALQUAD", "D3DPTFILTERCAPS_MINFGAUSSIANQUAD", "D3DPTFILTERCAPS_MIPFPOINT", "D3DPTFILTERCAPS_MIPFLINEAR", "D3DPTFILTERCAPS_MAGFPOINT", "D3DPTFILTERCAPS_MAGFLINEAR", "D3DPTFILTERCAPS_MAGFANISOTROPIC", "D3DPTFILTERCAPS_MAGFPYRAMIDALQUAD", "D3DPTFILTERCAPS_MAGFGAUSSIANQUAD"]
	FormatMask(caps.TextureFilterCaps,filterText,filterMask)

    Print "~tCubeTextureFilterCaps"
	FormatMask(caps.CubeTextureFilterCaps,filterText,filterMask)
    Print "~tVolumeTextureFilterCaps"
	FormatMask(caps.VolumeTextureFilterCaps,filterText,filterMask)
	
    
	Print "~tTextureAddressCaps"
	Local texAddMask:Int[]=[D3DPTADDRESSCAPS_WRAP, D3DPTADDRESSCAPS_MIRROR, D3DPTADDRESSCAPS_CLAMP, D3DPTADDRESSCAPS_BORDER, D3DPTADDRESSCAPS_INDEPENDENTUV, D3DPTADDRESSCAPS_MIRRORONCE]
	Local texAddText:String[]=["D3DPTADDRESSCAPS_WRAP", "D3DPTADDRESSCAPS_MIRROR", "D3DPTADDRESSCAPS_CLAMP", "D3DPTADDRESSCAPS_BORDER", "D3DPTADDRESSCAPS_INDEPENDENTUV", "D3DPTADDRESSCAPS_MIRRORONCE"]
	FormatMask(caps.TextureAddressCaps,texAddText,texAddMask)
	
	Print "~tVolumeTextureAddressCaps"
	FormatMask(caps.VolumeTextureAddressCaps,texAddText,texAddMask)
	
	Print "~tLineCaps"
	Local LineMask:Int[]=[D3DLINECAPS_TEXTURE, D3DLINECAPS_ZTEST, D3DLINECAPS_BLEND, D3DLINECAPS_ALPHACMP, D3DLINECAPS_FOG, D3DLINECAPS_ANTIALIAS]
	Local LineText:String[]=["D3DLINECAPS_TEXTURE", "D3DLINECAPS_ZTEST", "D3DLINECAPS_BLEND", "D3DLINECAPS_ALPHACMP", "D3DLINECAPS_FOG", "D3DLINECAPS_ANTIALIAS"]
	FormatMask(caps.LineCaps,LineText,LineMask)
	

   	FormatText "MaxTextureWidth",caps.MaxTextureWidth
	FormatText "MaxTextureHeight",caps.MaxTextureHeight
    FormatText "MaxVolumeExtent",caps.MaxVolumeExtent

    FormatText "MaxTextureRepeat",caps.MaxTextureRepeat
    FormatText "MaxTextureAspectRatio",caps.MaxTextureAspectRatio
    FormatText "MaxAnisotropy",caps.MaxAnisotropy
    FormatText "MaxVertexW",caps.MaxVertexW

    FormatText "GuardBandLeft",caps.GuardBandLeft
    FormatText "GuardBandTop",caps.GuardBandTop
    FormatText "GuardBandRight",caps.GuardBandRight
    FormatText "GuardBandBottom",caps.GuardBandBottom

    FormatText "ExtentsAdjust",caps.ExtentsAdjust

	Print "~tStencilCaps"
	
	Local stmask:Int[]=[D3DSTENCILCAPS_KEEP, D3DSTENCILCAPS_ZERO, D3DSTENCILCAPS_REPLACE, D3DSTENCILCAPS_INCRSAT, D3DSTENCILCAPS_DECRSAT, D3DSTENCILCAPS_INVERT, D3DSTENCILCAPS_INCR, D3DSTENCILCAPS_DECR, D3DSTENCILCAPS_TWOSIDED]
	Local sttext:String[]=["D3DSTENCILCAPS_KEEP", "D3DSTENCILCAPS_ZERO", "D3DSTENCILCAPS_REPLACE", "D3DSTENCILCAPS_INCRSAT", "D3DSTENCILCAPS_DECRSAT", "D3DSTENCILCAPS_INVERT", "D3DSTENCILCAPS_INCR", "D3DSTENCILCAPS_DECR", "D3DSTENCILCAPS_TWOSIDED"]
	FormatMask(caps.StencilCaps,sttext,stmask)
	
	
	Print "~tFVFCaps"
	Local fvfmask:Int[]=[D3DFVFCAPS_TEXCOORDCOUNTMASK, D3DFVFCAPS_DONOTSTRIPELEMENTS, D3DFVFCAPS_PSIZE]
	Local fvftext:String[]=["D3DFVFCAPS_TEXCOORDCOUNTMASK", "D3DFVFCAPS_DONOTSTRIPELEMENTS", "D3DFVFCAPS_PSIZE"]
	FormatMask(caps.FVFCaps,fvftext,fvfmask)

	Print "~tTextureOpCaps"
	Local topmask:Int[]=[D3DTEXOPCAPS_DISABLE, D3DTEXOPCAPS_SELECTARG1, D3DTEXOPCAPS_SELECTARG2, D3DTEXOPCAPS_MODULATE, D3DTEXOPCAPS_MODULATE2X, D3DTEXOPCAPS_MODULATE4X, D3DTEXOPCAPS_ADD, D3DTEXOPCAPS_ADDSIGNED, D3DTEXOPCAPS_ADDSIGNED2X, D3DTEXOPCAPS_SUBTRACT, D3DTEXOPCAPS_ADDSMOOTH, D3DTEXOPCAPS_BLENDDIFFUSEALPHA, D3DTEXOPCAPS_BLENDTEXTUREALPHA, D3DTEXOPCAPS_BLENDFACTORALPHA, D3DTEXOPCAPS_BLENDTEXTUREALPHAPM, D3DTEXOPCAPS_BLENDCURRENTALPHA, D3DTEXOPCAPS_PREMODULATE, D3DTEXOPCAPS_MODULATEALPHA_ADDCOLOR, D3DTEXOPCAPS_MODULATECOLOR_ADDALPHA, D3DTEXOPCAPS_MODULATEINVALPHA_ADDCOLOR, D3DTEXOPCAPS_MODULATEINVCOLOR_ADDALPHA, D3DTEXOPCAPS_BUMPENVMAP, D3DTEXOPCAPS_BUMPENVMAPLUMINANCE, D3DTEXOPCAPS_DOTPRODUCT3, D3DTEXOPCAPS_MULTIPLYADD, D3DTEXOPCAPS_LERP]
	Local toptext:String[]=["D3DTEXOPCAPS_DISABLE", "D3DTEXOPCAPS_SELECTARG1", "D3DTEXOPCAPS_SELECTARG2", "D3DTEXOPCAPS_MODULATE", "D3DTEXOPCAPS_MODULATE2X", "D3DTEXOPCAPS_MODULATE4X", "D3DTEXOPCAPS_ADD", "D3DTEXOPCAPS_ADDSIGNED", "D3DTEXOPCAPS_ADDSIGNED2X", "D3DTEXOPCAPS_SUBTRACT", "D3DTEXOPCAPS_ADDSMOOTH", "D3DTEXOPCAPS_BLENDDIFFUSEALPHA", "D3DTEXOPCAPS_BLENDTEXTUREALPHA", "D3DTEXOPCAPS_BLENDFACTORALPHA", "D3DTEXOPCAPS_BLENDTEXTUREALPHAPM", "D3DTEXOPCAPS_BLENDCURRENTALPHA", "D3DTEXOPCAPS_PREMODULATE", "D3DTEXOPCAPS_MODULATEALPHA_ADDCOLOR", "D3DTEXOPCAPS_MODULATECOLOR_ADDALPHA", "D3DTEXOPCAPS_MODULATEINVALPHA_ADDCOLOR", "D3DTEXOPCAPS_MODULATEINVCOLOR_ADDALPHA", "D3DTEXOPCAPS_BUMPENVMAP", "D3DTEXOPCAPS_BUMPENVMAPLUMINANCE", "D3DTEXOPCAPS_DOTPRODUCT3", "D3DTEXOPCAPS_MULTIPLYADD", "D3DTEXOPCAPS_LERP"]
	FormatMask(caps.TextureOpCaps,toptext,topmask)



    FormatText "MaxTextureBlendStages",caps.MaxTextureBlendStages
    FormatText "MaxSimultaneousTextures",caps.MaxSimultaneousTextures

	Print "~tVertexProcessingCaps"
	Local vpmask:Int[]=[D3DVTXPCAPS_TEXGEN, D3DVTXPCAPS_MATERIALSOURCE7, D3DVTXPCAPS_DIRECTIONALLIGHTS, D3DVTXPCAPS_POSITIONALLIGHTS, D3DVTXPCAPS_LOCALVIEWER, D3DVTXPCAPS_TWEENING, D3DVTXPCAPS_TEXGEN_SPHEREMAP, D3DVTXPCAPS_NO_TEXGEN_NONLOCALVIEWER]
	Local vptext:String[]=["D3DVTXPCAPS_TEXGEN", "D3DVTXPCAPS_MATERIALSOURCE7", "D3DVTXPCAPS_DIRECTIONALLIGHTS", "D3DVTXPCAPS_POSITIONALLIGHTS", "D3DVTXPCAPS_LOCALVIEWER", "D3DVTXPCAPS_TWEENING", "D3DVTXPCAPS_TEXGEN_SPHEREMAP", "D3DVTXPCAPS_NO_TEXGEN_NONLOCALVIEWER"]
	FormatMask(caps.VertexProcessingCaps,vptext,vpmask)



    FormatText "MaxActiveLights",caps.MaxActiveLights
    FormatText "MaxUserClipPlanes",caps.MaxUserClipPlanes
    FormatText "MaxVertexBlendMatrices",caps.MaxVertexBlendMatrices
    FormatText "MaxVertexBlendMatrixIndex",caps.MaxVertexBlendMatrixIndex

    FormatText "MaxPointSize",caps.MaxPointSize

    FormatText "MaxPrimitiveCount",caps.MaxPrimitiveCount
    FormatText "MaxVertexIndex",caps.MaxVertexIndex
    FormatText "MaxStreams",caps.MaxStreams
    FormatText "MaxStreamStride",caps.MaxStreamStride

    FormatText "VertexShaderVersion",D3DSHADER_VERSION_MAJOR(caps.VertexShaderVersion)+"."+D3DSHADER_VERSION_MINOR(caps.VertexShaderVersion)
    FormatText "MaxVertexShaderConst",caps.MaxVertexShaderConst

    FormatText "PixelShaderVersion",D3DSHADER_VERSION_MAJOR(caps.PixelShaderVersion)+"."+D3DSHADER_VERSION_MINOR(caps.PixelShaderVersion)
    FormatText "PixelShader1xMaxValue",caps.PixelShader1xMaxValue

    '// Here are the DX9 specific ones
	Print "~tDevCaps2"
	Local c2mask:Int[]=[D3DDEVCAPS2_STREAMOFFSET, D3DDEVCAPS2_DMAPNPATCH, D3DDEVCAPS2_ADAPTIVETESSRTPATCH, D3DDEVCAPS2_ADAPTIVETESSNPATCH, D3DDEVCAPS2_CAN_STRETCHRECT_FROM_TEXTURES, D3DDEVCAPS2_PRESAMPLEDDMAPNPATCH, D3DDEVCAPS2_VERTEXELEMENTSCANSHARESTREAMOFFSET]
	Local c2text:String[]=["D3DDEVCAPS2_STREAMOFFSET", "D3DDEVCAPS2_DMAPNPATCH", "D3DDEVCAPS2_ADAPTIVETESSRTPATCH", "D3DDEVCAPS2_ADAPTIVETESSNPATCH", "D3DDEVCAPS2_CAN_STRETCHRECT_FROM_TEXTURES", "D3DDEVCAPS2_PRESAMPLEDDMAPNPATCH", "D3DDEVCAPS2_VERTEXELEMENTSCANSHARESTREAMOFFSET"]
	FormatMask(caps.DevCaps2,c2text,c2mask)


    FormatText "MaxNpatchTessellationLevel",caps.MaxNpatchTessellationLevel
    FormatText "Reserved5",caps.Reserved5

    FormatText "MasterAdapterOrdinal",caps.MasterAdapterOrdinal
    FormatText "AdapterOrdinalInGroup",caps.AdapterOrdinalInGroup
    FormatText "NumberOfAdaptersInGroup",caps.NumberOfAdaptersInGroup

	Print "~tDeclTypes"
	Local dtmask:Int[]=[D3DDTCAPS_UBYTE4, D3DDTCAPS_UBYTE4N, D3DDTCAPS_SHORT2N, D3DDTCAPS_SHORT4N, D3DDTCAPS_USHORT2N, D3DDTCAPS_USHORT4N, D3DDTCAPS_UDEC3, D3DDTCAPS_DEC3N, D3DDTCAPS_FLOAT16_2, D3DDTCAPS_FLOAT16_4]
	Local dttext:String[]=["D3DDTCAPS_UBYTE4", "D3DDTCAPS_UBYTE4N", "D3DDTCAPS_SHORT2N", "D3DDTCAPS_SHORT4N", "D3DDTCAPS_USHORT2N", "D3DDTCAPS_USHORT4N", "D3DDTCAPS_UDEC3", "D3DDTCAPS_DEC3N", "D3DDTCAPS_FLOAT16_2", "D3DDTCAPS_FLOAT16_4"]	
	FormatMask(caps.DeclTypes,dttext,dtmask)
		

    FormatText "NumSimultaneousRTs",caps.NumSimultaneousRTs

	Print "~tStretchRectFilterCaps"
	FormatMask(caps.StretchRectFilterCaps,filterText,filterMask)

Rem
'   D3DVSHADERCAPS2_0 VS20Caps;
    Field VS20Caps_Caps :Int
    Field VS20Caps_DynamicFlowControlDepth :Int
    Field VS20Caps_NumTemps :Int
    Field VS20Caps_StaticFlowControlDepth : Int
'   D3DPSHADERCAPS2_0 PS20Caps;
    Field PS20Caps_Caps :Int
    Field PS20Caps_DynamicFlowControlDepth :Int
    Field PS20Caps_NumTemps :Int
    Field PS20Caps_StaticFlowControlDepth : Int
    Field PS20Caps_NumInstructionSlots : Int
End Rem

    FormatText "VertexTextureFilterCaps",caps.VertexTextureFilterCaps
    FormatText "MaxVShaderInstructionsExecuted",caps.MaxVShaderInstructionsExecuted
    FormatText "MaxPShaderInstructionsExecuted",caps.MaxPShaderInstructionsExecuted
    FormatText "MaxVertexShader30InstructionSlots",caps.MaxVertexShader30InstructionSlots
    FormatText "MaxPixelShader30InstructionSlots",caps.MaxPixelShader30InstructionSlots
	
	
	d3d9.Release_	
End Function


Function UpdateStatusbar()
	Local Cl:Int = TextAreaCursor(TEXTEDITOR,TextArea_Lines)
	Local cursorpos:Int=TextAreaCursor(TEXTEDITOR,TEXTAREA_CHARS)
	Local cursorlen:Int=TextAreaSelLen(TEXTEDITOR,TEXTAREA_CHARS)
	SetStatusText MAINWINDOW,"Line: "+Int(Cl+1)+" Char:"+Int((CursorPos-Cursorlen-TextAreaChar(TEXTEDITOR,CL))+1)
EndFunction
